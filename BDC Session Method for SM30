report ZBDC_SSM_SM30_R
       no standard page heading line-size 255.

"include bdcrecx1.
DATA : BEGIN OF ITAB OCCURS 0,
       ID(5),
       NAME(30),
       ADDRESS(30),
       S_ID(5),
  END OF ITAB.

PARAMETERS : P_FILE TYPE RLGRAP-FILENAME.

DATA: BDCDATA TYPE BDCDATA OCCURS 0 WITH HEADER LINE,
      t_bdcdata  LIKE TABLE OF bdcdata,
      FILE TYPE STRING.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.

CALL FUNCTION 'F4_FILENAME'
 EXPORTING
   PROGRAM_NAME        = SYST-CPROG
   DYNPRO_NUMBER       = SYST-DYNNR
   FIELD_NAME          = ' '
 IMPORTING
   FILE_NAME           = P_FILE
          .

start-of-selection.
  FILE = P_FILE.
CALL FUNCTION 'GUI_UPLOAD'
  EXPORTING
    FILENAME                      = FILE
    FILETYPE                      = 'DAT'
*   HAS_FIELD_SEPARATOR           = ' '
*   HEADER_LENGTH                 = 0
*   READ_BY_LINE                  = 'X'
*   DAT_MODE                      = ' '
*   CODEPAGE                      = ' '
*   IGNORE_CERR                   = ABAP_TRUE
*   REPLACEMENT                   = '#'
*   CHECK_BOM                     = ' '
*   VIRUS_SCAN_PROFILE            =
*   NO_AUTH_CHECK                 = ' '
* IMPORTING
*   FILELENGTH                    =
*   HEADER                        =
  TABLES
    DATA_TAB                      = ITAB
* EXCEPTIONS
*   FILE_OPEN_ERROR               = 1
*   FILE_READ_ERROR               = 2
*   NO_BATCH                      = 3
*   GUI_REFUSE_FILETRANSFER       = 4
*   INVALID_TYPE                  = 5
*   NO_AUTHORITY                  = 6
*   UNKNOWN_ERROR                 = 7
*   BAD_DATA_FORMAT               = 8
*   HEADER_NOT_ALLOWED            = 9
*   SEPARATOR_NOT_ALLOWED         = 10
*   HEADER_TOO_LONG               = 11
*   UNKNOWN_DP_ERROR              = 12
*   ACCESS_DENIED                 = 13
*   DP_OUT_OF_MEMORY              = 14
*   DISK_FULL                     = 15
*   DP_TIMEOUT                    = 16
*   OTHERS                        = 17
          .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

perform open_group.
LOOP AT ITAB.
  CLEAR BDCDATA[].
    PERFORM POPULATE.
    PERFORM INSERT.
ENDLOOP.
perform close_group.
*&---------------------------------------------------------------------*
*&      Form  OPEN_GROUP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM OPEN_GROUP .
CALL FUNCTION 'BDC_OPEN_GROUP'
 EXPORTING
    CLIENT                    = SY-MANDT
*   DEST                      = FILLER8
    GROUP                     = 'VR'
*   HOLDDATE                  = FILLER8
    KEEP                      = 'X'
    USER                      = SY-UNAME
*   RECORD                    = FILLER1
*   PROG                      = SY-CPROG
*   DCPFM                     = '%'
*   DATFM                     = '%'
* IMPORTING
*   QID                       =
* EXCEPTIONS
*   CLIENT_INVALID            = 1
*   DESTINATION_INVALID       = 2
*   GROUP_INVALID             = 3
*   GROUP_IS_LOCKED           = 4
*   HOLDDATE_INVALID          = 5
*   INTERNAL_ERROR            = 6
*   QUEUE_ERROR               = 7
*   RUNNING                   = 8
*   SYSTEM_LOCK_ERROR         = 9
*   USER_INVALID              = 10
*   OTHERS                    = 11
          .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

ENDFORM.                    " OPEN_GROUP
*&---------------------------------------------------------------------*
*&      Form  POPULATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM POPULATE .

perform bdc_dynpro      using 'SAPMSVMA' '0100'.
perform bdc_field       using 'BDC_CURSOR'
                              'VIEWNAME'.
perform bdc_field       using 'BDC_OKCODE'
                              '=UPD'.
perform bdc_field       using 'VIEWNAME'
                              'ZCUST_R'.
perform bdc_field       using 'VIMDYNFLDS-LTD_DTA_NO'
                              'X'.
perform bdc_dynpro      using 'SAPLZCUST_R' '0001'.
perform bdc_field       using 'BDC_CURSOR'
                              'ZCUST_R-NAME(01)'.
perform bdc_field       using 'BDC_OKCODE'
                              '=NEWL'.
perform bdc_dynpro      using 'SAPLZCUST_R' '0002'.
perform bdc_field       using 'BDC_CURSOR'
                              'ZCUST_R-S_ID'.
perform bdc_field       using 'BDC_OKCODE'
                              '=SAVE'.
perform bdc_field       using 'ZCUST_R-ID'
                              ITAB-ID."'30'.
perform bdc_field       using 'ZCUST_R-NAME'
                              ITAB-NAME."'MALLI'.
perform bdc_field       using 'ZCUST_R-ADDRESS'
                              ITAB-ADDRESS."'LONDON'.
perform bdc_field       using 'ZCUST_R-S_ID'
                              ITAB-S_ID."'3'.
perform bdc_dynpro      using 'SAPLZCUST_R' '0002'.
perform bdc_field       using 'BDC_CURSOR'
                              'ZCUST_R-NAME'.
perform bdc_field       using 'BDC_OKCODE'
                              '=UEBE'.
*perform bdc_field       using 'ZCUST_R-NAME'
*                              ITAB-NAME."'MALLI'.
*perform bdc_field       using 'ZCUST_R-ADDRESS'
*                              ITAB-ADDRESS."'LONDON'.
*perform bdc_field       using 'ZCUST_R-S_ID'
*                              ITAB-S_ID."'3'.
perform bdc_dynpro      using 'SAPLZCUST_R' '0001'.
perform bdc_field       using 'BDC_CURSOR'
                              'ZCUST_R-NAME(01)'.
perform bdc_field       using 'BDC_OKCODE'
                              '=SAVE'.
perform bdc_dynpro      using 'SAPLZCUST_R' '0001'.
perform bdc_field       using 'BDC_CURSOR'
                              'ZCUST_R-NAME(01)'.
perform bdc_field       using 'BDC_OKCODE'
                              '=BACK'.
perform bdc_dynpro      using 'SAPMSVMA' '0100'.
perform bdc_field       using 'BDC_OKCODE'
                              '/EBACK'.
perform bdc_field       using 'BDC_CURSOR'
                              'VIEWNAME'.
"perform bdc_transaction using 'SM30'.

ENDFORM.                    " POPULATE

*&---------------------------------------------------------------------*
*&      Form  BDC_FIELD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0112   text
*      -->P_0113   text
*----------------------------------------------------------------------*
FORM BDC_FIELD  USING FNAM FVAL.
  CLEAR BDCDATA.
    BDCDATA-FNAM = FNAM.
    BDCDATA-FVAL = FVAL.
    APPEND BDCDATA.

ENDFORM.                " BDC_FIELD
*&---------------------------------------------------------------------*
*&      Form  BDC_DYNPRO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0107   text
*      -->P_0108   text
*----------------------------------------------------------------------*
FORM BDC_DYNPRO  USING PROGRAM DYNPRO.
CLEAR BDCDATA.
  BDCDATA-PROGRAM = PROGRAM.
  BDCDATA-DYNPRO = DYNPRO.
  BDCDATA-DYNBEGIN = 'X'.
  APPEND BDCDATA.

ENDFORM.                    " BDC_DYNPRO
*&---------------------------------------------------------------------*
*&      Form  INSERT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM INSERT .
CALL FUNCTION 'BDC_INSERT'
 EXPORTING
   TCODE                  = 'SM30'
*   POST_LOCAL             = NOVBLOCAL
*   PRINTING               = NOPRINT
*   SIMUBATCH              = ' '
*   CTUPARAMS              = ' '
  TABLES
    DYNPROTAB              = BDCDATA
 "EXCEPTIONS
*   INTERNAL_ERROR         = 1
*   NOT_OPEN               = 2
*   QUEUE_ERROR            = 3
*   TCODE_INVALID          = 4
*   PRINTING_INVALID       = 5
*   POSTING_INVALID        = 6
*   OTHERS                 = 7
          .
IF SY-SUBRC <> 0.
MESSAGE 'NOT UNSUCCESEFULL' TYPE 'I'.
ELSE.
MESSAGE 'SESSION CREATED CHECK IN SM35' TYPE 'I'.
ENDIF.

ENDFORM.                    " INSERT
*&---------------------------------------------------------------------*
*&      Form  CLOSE_GROUP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CLOSE_GROUP .
CALL FUNCTION 'BDC_CLOSE_GROUP'
 EXCEPTIONS
   NOT_OPEN          = 1
   QUEUE_ERROR       = 2
   OTHERS            = 3
          .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

ENDFORM.                    " CLOSE_GROUP
